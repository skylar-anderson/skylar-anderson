technicalKnowledge: 5
instructions: Highlight key changes in the diff.  Tests, documentation,
  dependencies, and other changes should have a low priority.
language: English
writingStyle: Normal
classifications:
  - name: Bug fix
    description: A change that addresses incorrect or unexpected behavior in the
      existing code.
  - name: Feature
    description: Introduction of a new feature or a notable enhancement to existing
      functionality.
  - name: Refactor
    description: Reorganization of code for improved clarity, maintainability, or
      structure without changing external behavior.
  - name: Performance
    description: Changes that optimize the speed, efficiency, or scalability of the
      application.
  - name: Security
    description: A change that addresses a security vulnerability or hardens the
      system's security posture.
  - name: Documentation
    description: Any PR that updates or adds documentation (README, user manuals,
      code comments, etc.).
  - name: Testing
    description: Additions or revisions to tests (unit, integration, end-to-end)
      aimed at improving coverage or reliability.
  - name: Build/CI
    description: Modifications to library/package dependencies, build scripts, or
      continuous integration configuration.
  - name: Chore
    description: General housekeeping that doesn't fall under the above categories
      (e.g., version bumps, minor configurations, or grooming tasks).
  - name: UX
    description: Changes specifically aimed at user interface or user experience
      improvements.
  - name: Other
    description: Changes that don't fit into any other category.
templates:
  - name: Default
    instructions: |
      - Walk through the changes in a clear and organized manner
      - The changes most reflective of the PRs intent should be shown first
      - Documentation, tests, and cosmetic changes should be shown last
